# -*- coding: utf-8 -*-
"""parkinglot_detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Yupoer/eaae444457e6b9b3cabac8740cce9174/parkinglot_detection.ipynb
"""

class Car:
    def __init__(self, licensePlate):
        self.licensePlate = licensePlate
        self.parked = False

    def park(self):
        if not self.parked:
            self.parked = True
            print(f"車牌號碼為 {self.licensePlate} 的車輛現已停放。")
        else:
            print("此車輛已經停放。")

    def leave(self):
        if self.parked:
            self.parked = False
            print(f"車牌號碼為 {self.licensePlate} 的車輛已離開停車場。")
        else:
            print("此車輛並未停放。")

    def __str__(self):
        return f"車牌號碼: {self.licensePlate}"


class ParkingLot:
    def __init__(self, capacity):
        self.capacity = capacity
        self.availableSpaces = capacity
        # List to store all parking spaces
        self.parkingSpaces = [ParkingSpace(spaceId) for spaceId in range(1, capacity + 1)]
        self.parkedCars = []

    def enterParkingLot(self, license):
        if self.availableSpaces > 0:
            self.availableSpaces -= 1
            self.parkedCars.append(Car(license))
            print(f"車牌號碼為 {license} 的車輛進入停車場。")
            print(self.availableSpaces)


        else:
            print("停車場已滿，無法進入。")

    def leaveParkingLot(self, licensePlate):
        for car in self.parkedCars:
            if car.licensePlate == licensePlate:

                # Increment available spaces when a car leaves the parking lot
                self.availableSpaces += 1
                self.parkedCars.remove(car)
                print(f"車牌號碼為 {car.licensePlate} 的車輛離開停車場。")
                return
        print("此車輛並未停放在此停車場。")

    def parkCar(self, licensePlate):
        for space in self.parkingSpaces:
            if not space.occupied:
                space.occupy(licensePlate)
                print(f"車牌號碼為 {licensePlate} 的車輛現已停放在停車位 {space.spaceId}。")
                return

    def leaveCar(self, licensePlate):
        for space in self.parkingSpaces:
            if space.occupied and space.carLicensePlate == licensePlate:
                self.availableSpaces -= 1
                space.leave()
                return
        print("此車輛並未停放在此停車場。")

    def getAvailableSpaces(self):
        return self.availableSpaces

    def getParkedCars(self):
        #return [car for car in self.parkedCars if car in [space.carLicensePlate for space in self.parkingSpaces if space.occupied]]
        return self.parkedCars



class ParkingSpace:
    def __init__(self, spaceId):
        self.spaceId = spaceId
        self.occupied = False
        # Variable to store the occupying car
        self.carLicensePlate = None

    def occupy(self, license):
        self.occupied = True
        self.carLicensePlate = license
        print(f"車牌號碼為 {self.carLicensePlate} 的車輛已進入停車位 {self.spaceId}。")

    def leave(self):
        if self.carLicensePlate:
            print(f"車牌號碼為 {self.carLicensePlate} 的車輛已離開停車位 {self.spaceId}。")
            self.carLicensePlate = None
            self.occupied = True
        else:
            print(f"停車位 {self.spaceId} 為空。")


def main():

    # Create a parking lot
    parkingLot = ParkingLot(capacity=16)

    # Cars enter the parking lot
    parkingLot.enterParkingLot("JKL012")
    parkingLot.enterParkingLot("MN0345")
    parkingLot.enterParkingLot("PQR678")

    # Park cars in the parking lot
    parkingLot.parkCar("JKL012")
    parkingLot.parkCar("MNO345")
    parkingLot.parkCar("PQR678")

    # Leave a car from the parking lot
    parkingLot.leaveCar("JKL012")

    # Check the parking lot status
    print("可用空間:", parkingLot.getAvailableSpaces())

    # Cars enter the parking lot & check parking lot status
    parkingLot.leaveParkingLot("JKL012")
    print("可用空間:", parkingLot.getAvailableSpaces())

    print("已停放車輛:")
    for car in parkingLot.getParkedCars():
        print(car)


if __name__ == "__main__":
    main()