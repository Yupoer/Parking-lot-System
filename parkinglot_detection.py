# -*- coding: utf-8 -*-
"""parkinglot_detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SuWeBw01GugMXEvFZLR1YQtq2otYF8E5
"""

import datetime

class Car:
    def __init__(self, licensePlate):
        self.licensePlate = licensePlate
        self.isPark = False
        self.inpark = "has not park yet"
        self.outpark = "has not leave yet"
        self.inspace = "not in space yet"
        self.outspace = "not out space yet"

    def park(self):
        if not self.isPark:
            self.inspace = datetime.datetime.now(tz=datetime.timezone(datetime.timedelta(hours=8)))
            self.isPark = True
            print(f"{self.inspace} 車牌號碼為 {self.licensePlate} 的車輛現已停放。")
        else:
            print("此車輛已經停放。")

    def leave(self):
        if self.isPark:
            self.isPark = False
            self.outspace = datetime.datetime.now(tz=datetime.timezone(datetime.timedelta(hours=8)))
            print(f"{self.outspace} 車牌號碼為 {self.licensePlate} 的車輛已開始離開停車位。")
        else:
            print("此車輛並未停放。")

    def __str__(self):
        return f"車牌號碼: {self.licensePlate}\n entertime: {self.inpark}\n enterspace: {self.inspace}\n leavespace: {self.outspace}\n leavetime: {self.outpark}\n"


class ParkingLot:
    def __init__(self, capacity):
        self.capacity = capacity
        self.availableSpaces = capacity
        # List to store all parking spaces
        self.parkingSpaces = [ParkingSpace(spaceId) for spaceId in range(1, capacity + 1)]

        self.parkedCars = []

    def enterParkingLot(self, license):
        if self.availableSpaces > 0:
            self.availableSpaces -= 1
            now = datetime.datetime.now(tz=datetime.timezone(datetime.timedelta(hours=8)))
            tempcar = Car(license)
            tempcar.inpark = now
            self.parkedCars.append(tempcar)
            print(f"{now} 車牌號碼為 {license} 的車輛進入停車場。")
            print(f"剩餘車位數：{self.availableSpaces}\n")
        else:
            print("停車場已滿，無法進入。")

    def leaveParkingLot(self, licensePlate):
        for car in self.parkedCars:
            if car.licensePlate == licensePlate:
                # Increment available spaces when a car leaves the parking lot
                self.availableSpaces += 1
                if car.isPark:
                  car.leave()
                now = datetime.datetime.now(tz=datetime.timezone(datetime.timedelta(hours=8)))
                car.outpark = now
                print(f"{now} 車牌號碼為 {car.licensePlate} 的車輛離開停車場。")
                return
        print("此車輛並未停放在此停車場。")
    def found(self, license):
      for car in self.parkedCars:
        if car.licensePlate == license:
          return car
      print("not found")

    def parkCar(self, licensePlate):
        for space in self.parkingSpaces:
            if not space.occupied:
                car = self.found(licensePlate)
                space.occupy(car)
                print(f"車牌號碼為 {licensePlate} 的車輛現已停放在停車位 {space.spaceId}。\n")
                return

    def leaveCar(self, licensePlate):
        for space in self.parkingSpaces:
            if space.occupied and space.carLicensePlate == licensePlate:
                self.availableSpaces -= 1
                car = self.found(licensePlate)
                space.leave(car)
                return
        print("此車輛並未停放在此停車場。")

    def getAvailableSpaces(self):
        return self.availableSpaces

    def getParkedCars(self):
        #return [car for car in self.parkedCars if car in [space.carLicensePlate for space in self.parkingSpaces if space.occupied]]
        return self.parkedCars



class ParkingSpace:
    def __init__(self, spaceId):
        self.spaceId = spaceId
        self.occupied = False
        # Variable to store the occupying car
        self.carLicensePlate = None

    def occupy(self,  car):
        self.occupied = True
        self.carLicensePlate = car.licensePlate
        print(f"車牌號碼為 {self.carLicensePlate} 的車輛已進入停車位 {self.spaceId}。")
        car.park()

    def leave(self, car):
        if self.carLicensePlate:
            car.leave()
            print(f"車牌號碼為 {self.carLicensePlate} 的車輛已離開停車位 {self.spaceId}。")
            self.carLicensePlate = None
            self.occupied = False
        else:
            print(f"停車位 {self.spaceId} 為空。")


def main():
    # Create a parking lot
    parkingLot = ParkingLot(capacity=16)

    # Cars enter the parking lot
    parkingLot.enterParkingLot("JKL012")
    parkingLot.enterParkingLot("MN0345")
    parkingLot.enterParkingLot("PQR678")

    # Park cars in the parking lot
    parkingLot.parkCar("JKL012")
    parkingLot.parkCar("MN0345")
    parkingLot.parkCar("PQR678")

    # Leave a car from the parking lot
    parkingLot.leaveCar("JKL012")
    # Check the parking lot status

    # Cars enter the parking lot & check parking lot status
    parkingLot.leaveParkingLot("JKL012")

    print("\n已停放車輛:")
    for car in parkingLot.getParkedCars():
        print(car)


if __name__ == "__main__":
    main()

